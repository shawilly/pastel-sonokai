*pastel-sonokai.txt* High Contrast & Vivid Color Scheme based on Monokai Pro
*pastel-sonokai*
>
                 _____                   __         _
                / ___/____  ____  ____  / /______ _(_)
                \__ \/ __ \/ __ \/ __ \/ //_/ __ `/ /
               ___/ / /_/ / / / / /_/ / ,< / /_/ / /
              /____/\____/_/ /_/\____/_/|_|\__,_/_/
<

==============================================================================
CONTENTS                                     *pastel-sonokai-contents*

Introduction                                 |pastel-sonokai-introduction|
Installation                                 |pastel-sonokai-installation|
Usage                                        |pastel-sonokai-usage|
Configuration                                |pastel-sonokai-configuration|
FAQ                                          |pastel-sonokai-faq|

Note: Type |gO| in neovim to show the outline of contents.

==============================================================================
INTRODUCTION                                              *pastel-sonokai-introduction*

Sometimes I need a high contrast color scheme, and I think monokai is one of
the best solutions, it's very beautiful and vivid.

However there is one thing I can't stand -- the contrast is too high, which is
totally unacceptable for me.

This color scheme is based on Monokai Pro, the contrast is adjusted to be a
bit lower while keeping the colors vivid enough.

The `shusia`, `maia` and `espresso` variants are basically modified versions of
Monokai Pro. I'm not going to port all variants of Monokai Pro because I don't
like some of them. In addition, I designed some new variants inspired by other
color schemes.

Features~

- High contrast but within acceptable range.
- Vivid colors.
- Highly customizable.
- Rich support for common file types and plugins.
- Tree-sitter support.
- Semantic highlighting support.
- Italic support ðŸŽ‰

==============================================================================
INSTALLATION                                              *pastel-sonokai-installation*

------------------------------------------------------------------------------

Via Plugin Manager~

    Take [vim-plug](https://github.com/junegunn/vim-plug) for example:
>
        Plug 'shawilly/pastel-sonokai'
<
    For better syntax highlighting support, please install
    https://github.com/sheerun/vim-polyglot or https://github.com/nvim-treesitter/nvim-treesitter.

------------------------------------------------------------------------------

Via Pack Feature~

    1. Create a new directory: `$ mkdir -p ~/.vim/pack/colors/opt`

    2. Clone this repository: `$ git clone --depth 1 https://github.com/shawilly/pastel-sonokai.git ~/.vim/pack/colors/opt/pastel-sonokai`

    3. Generate help tags: `:helptags ~/.vim/pack/colors/opt/pastel-sonokai/doc/`

    4. Add `packadd! pastel-sonokai` to your vimrc.

Note: If you install this color scheme to `pack/*/start`, you still need to add `packadd! pastel-sonokai` to your vimrc. [sainnhe/gruvbox-material#60](https://github.com/sainnhe/gruvbox-material/issues/60)

------------------------------------------------------------------------------

Manually~

    1. Clone the repository: `git clone --depth 1 https://github.com/shawilly/pastel-sonokai.git`

    2. Copy `/path/to/pastel-sonokai/autoload/pastel-sonokai.vim` to
    `~/.vim/autoload/` .

    3. Copy `/path/to/pastel-sonokai/colors/pastel-sonokai.vim` to
    `~/.vim/colors/` .

    4. Copy `/path/to/pastel-sonokai/doc/pastel-sonokai.txt` to
    `~/.vim/doc/` and execute `:helptags ~/.vim/doc/` to generate help tags.

    5. To install [airline](https://github.com/vim-airline/vim-airline) theme,
    copy `/path/to/pastel-sonokai/autoload/airline/themes/pastel-sonokai.vim`
    to `~/.vim/autoload/airline/themes/` .

    6. To install [lightline](https://github.com/itchyny/lightline.vim) theme,
    copy `/path/to/pastel-sonokai/autoload/lightline/colorscheme/pastel-sonokai.vim`
    to `~/.vim/autoload/lightline/colorscheme/` .

    7. To install [lualine](https://github.com/nvim-lualine/lualine.nvim) theme,
    copy `/path/to/pastel-sonokai/lua/lualine/themes/pastel-sonokai.lua`
    to `~/.config/nvim/lua/lualine/themes/` .

------------------------------------------------------------------------------

AUR~

    There are some packages available for Arch Linux users in AUR:

    - [vim-pastel-sonokai-git](https://aur.archlinux.org/pkgbase/vim-pastel-sonokai-git/)
    - [neovim-pastel-sonokai-git](https://aur.archlinux.org/pkgbase/neovim-pastel-sonokai-git/)

==============================================================================
USAGE                                                            *pastel-sonokai-usage*

------------------------------------------------------------------------------

Vim~

    Put something like this in your vimrc:
>
        " Important!!
        if has('termguicolors')
          set termguicolors
        endif

        " The configuration options should be placed before `colorscheme pastel-sonokai`.
        let g:pastel-sonokai_style = 'andromeda'
        let g:pastel-sonokai_better_performance = 1

        colorscheme pastel-sonokai
<
    See |pastel-sonokai-configuration| for more configuration options.

    If you want to apply this color scheme temporarily, run this command in
    vim(this may cause broken colors):
>
        :colorscheme pastel-sonokai
<
------------------------------------------------------------------------------

Airline~

    To enable [airline](https://github.com/vim-airline/vim-airline) color
    scheme, put this in your vimrc:
>
        let g:airline_theme = 'pastel-sonokai'
<
    To apply it without reloading:
>
        :AirlineTheme pastel-sonokai
<
------------------------------------------------------------------------------

Lightline~

    To enable [lightline](https://github.com/itchyny/lightline.vim) color
    scheme, put this in your vimrc:
>
        let g:lightline = {}
        let g:lightline.colorscheme = 'pastel-sonokai'

        " Or this line:
        let g:lightline = {'colorscheme' : 'pastel-sonokai'}
<
    To apply it without reloading:
>
        :let g:lightline.colorscheme = 'pastel-sonokai'
        :call lightline#init()
        :call lightline#colorscheme()
<
------------------------------------------------------------------------------

Lualine~

    To enable [lualine](https://github.com/nvim-lualine/lualine.nvim) color
    scheme, put this in your init.lua:
>
        require'lualine'.setup {
          options = {
            theme = 'pastel-sonokai'
          }
        }
<
    To apply it without reloading:
>
        :lua require'lualine'.setup {options = {theme = 'pastel-sonokai'}}
<
==============================================================================
CONFIGURATION                                            *pastel-sonokai-configuration*

Note: the configuration options should be placed before `colorscheme pastel-sonokai`

E.g.
>
    if has('termguicolors')
      set termguicolors
    endif

    let g:pastel-sonokai_style = 'andromeda'
    let g:pastel-sonokai_better_performance = 1

    colorscheme pastel-sonokai
    let g:lightline = {'colorscheme' : 'pastel-sonokai'}
<
------------------------------------------------------------------------------
                                                               *g:pastel-sonokai_style*
g:pastel-sonokai_style~

The style of this color scheme.

    Type:               |String|
    Available values:   `'default'`, `'atlantis'`, `'andromeda'`, `'shusia'`, `'maia'`,
    `'espresso'`
    Default value:      `'default'`

------------------------------------------------------------------------------
                                              *g:pastel-sonokai_disable_italic_comment*
g:pastel-sonokai_disable_italic_comment~

By default, italic is enabled in `Comment`. To disable italic in `Comment`, set
this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                                       *g:pastel-sonokai_enable_italic*
g:pastel-sonokai_enable_italic~

To enable italic in this color scheme, set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: This option is designed to use with fonts that support cursive italics.
See |pastel-sonokai-faq| for more information.

------------------------------------------------------------------------------
                                                              *g:pastel-sonokai_cursor*
g:pastel-sonokai_cursor~

Customize the cursor color, only works in GUI clients.

    Type:               |String|
    Available values:   `'auto'`, `'red'`, `'orange'`, `'yellow'`, `'green'`,
    `'blue'`, `'purple'`
    Default value:      `'auto'`

------------------------------------------------------------------------------
                                              *g:pastel-sonokai_transparent_background*
g:pastel-sonokai_transparent_background~

To use transparent background, set this option to `1`.

If you want more ui components to be transparent (for example, status line
background), set this option to `2`.

    Type:               |Number|
    Available values:   `0`, `1`, `2`
    Default value:      `0`

------------------------------------------------------------------------------
                                                *g:pastel-sonokai_dim_inactive_windows*
g:pastel-sonokai_dim_inactive_windows~

Dim inactive windows. Only works in Neovim currently.

When this option is used in conjunction with |g:pastel-sonokai_show_eob| set to 0,
the end of the buffer will only be hidden inside the active window. Inside
inactive windows, the end of buffer filler characters will be visible in
dimmed symbols. This is due to the way Vim and Neovim handle |hl-EndOfBuffer|.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                           *g:pastel-sonokai_menu_selection_background*
g:pastel-sonokai_menu_selection_background~

Customize the background color of |hl-PmenuSel| and |hl-WildMenu|.

    Type:               |String|
    Available values:   `'blue'`, `'green'`, `'red'`
    Default value:      `'blue'`

------------------------------------------------------------------------------
                                                    *g:pastel-sonokai_spell_foreground*
g:pastel-sonokai_spell_foreground~

By default, this color scheme won't color the foreground of |spell|, instead
colored under curls will be used. If you also want to color the foreground,
set this option to `'colored'`.

    Type:               |String|
    Available values:   `'none'`, `'colored'`
    Default value:      `'none'`

------------------------------------------------------------------------------
                                                            *g:pastel-sonokai_show_eob*
g:pastel-sonokai_show_eob~

Whether to show |hl-EndOfBuffer|.

    Type:               |Number|
    Available values:   `1`, `0`
    Default value:      `1`

------------------------------------------------------------------------------
                                                         *g:pastel-sonokai_float_style*
g:pastel-sonokai_float_style~

Style used to make floating windows stand out from other windows. `'bright'`
makes the background of these windows lighter than |hl-Normal|, whereas
`'dim'` makes it darker.

Floating windows include for instance diagnostic pop-ups, scrollable
documentation windows from completion engines, overlay windows from
installers, etc.

    Type:               |String|
    Available values:   `'bright'`, `'dim'`
    Default value:      `'bright'`

------------------------------------------------------------------------------
                                           *g:pastel-sonokai_diagnostic_text_highlight*
g:pastel-sonokai_diagnostic_text_highlight~

Some plugins support highlighting error/warning/info/hint texts, by default
these texts are only underlined, but you can use this option to also highlight
the background of them.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Currently, the following plugins are supported:

- neovim's built-in language server client
- https://github.com/neoclide/coc.nvim
- https://github.com/prabirshrestha/vim-lsp
- https://github.com/ycm-core/YouCompleteMe
- https://github.com/dense-analysis/ale
- https://github.com/neomake/neomake
- https://github.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                           *g:pastel-sonokai_diagnostic_line_highlight*
g:pastel-sonokai_diagnostic_line_highlight~

Some plugins support highlighting error/warning/info/hint lines, but this
feature is disabled by default in this color scheme. To enable this feature,
set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Currently, the following plugins are supported:

- https://github.com/neoclide/coc.nvim
- https://github.com/ycm-core/YouCompleteMe
- https://github.com/dense-analysis/ale
- https://github.com/vim-syntastic/syntastic

------------------------------------------------------------------------------
                                             *g:pastel-sonokai_diagnostic_virtual_text*
g:pastel-sonokai_diagnostic_virtual_text~

Some plugins can use the virtual text feature of Neovim to display
error/warning/info/hint information. You can use this option to adjust the
way these virtual texts are highlighted.

    Type:               |String|
    Available values:   `'grey'`, `'colored'`, `'highlighted'`
    Default value:      `'grey'`

Currently, the following plugins are supported:

- Neovim's built-in language server client
- https://github.com/neoclide/coc.nvim
- https://github.com/prabirshrestha/vim-lsp
- https://github.com/dense-analysis/ale
- https://github.com/neomake/neomake
- https://github.com/ycm-core/YouCompleteMe

------------------------------------------------------------------------------
                                                        *g:pastel-sonokai_current_word*
g:pastel-sonokai_current_word~

Some plugins can highlight the word under current cursor, you can use this
option to control their behavior.

    Type:               |String|
    Available values:   `'grey background'`, `'bold'`, `'underline'`, `'italic'`
    Default value:      `'grey background'` when not in transparent mode, `'bold'`
    when in transparent mode.

Currently, the following plugins are supported:

- https://github.com/neoclide/coc-highlight
- https://github.com/dominikduda/vim_current_word
- https://github.com/RRethy/vim-illuminate
- https://github.com/itchyny/vim-cursorword
- https://github.com/prabirshrestha/vim-lsp

------------------------------------------------------------------------------
                                             *g:pastel-sonokai_disable_terminal_colors*
g:pastel-sonokai_disable_terminal_colors~

Setting this option to `1` will disable terminal colors provided by this color
scheme so you can remain terminal colors the same when using |:terminal| in
vim and outside of vim.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                              *g:pastel-sonokai_lightline_disable_bold*
g:pastel-sonokai_lightline_disable_bold~

By default, bold is enabled in lightline color scheme. To disable bold in
lightline color scheme, set this option to `1`.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

Note: this configuration option doesn't need to be placed before `colorscheme pastel-sonokai`

------------------------------------------------------------------------------
                                                  *g:pastel-sonokai_better_performance*
g:pastel-sonokai_better_performance~

The loading time of this color scheme is very long because too many file types
and plugins are optimized. This feature allows you to load part of the code on
demand by placing them in the `after/syntax` directory.

Enabling this option will reduce loading time by approximately 50%.

    Type:               |Number|
    Available values:   `0`, `1`
    Default value:      `0`

------------------------------------------------------------------------------
                                                     *g:pastel-sonokai_colors_override*
g:pastel-sonokai_colors_override~

Override color palette. The available keys can be found in
`/path/to/pastel-sonokai/autoload/pastel-sonokai.vim`.

E.g.
>
    let g:pastel-sonokai_colors_override = {'bg0': ['#1e222a', '235'], 'bg2': ['#282c34', '236']}
    colorscheme pastel-sonokai
<
    Type:               |Dictionary|
    Default value:      `{}`

==============================================================================
FAQ                                                                *pastel-sonokai-faq*

------------------------------------------------------------------------------

The colors don't match those in the screenshots.~

1. This color scheme is mainly designed for true colors, `set termguicolors`
is required. Check output of `vim --version`, maybe your vim doesn't support
`termguicolors`.

2. Maybe your terminal emulator doesn't support true colors, you can test it
using [this script](https://unix.stackexchange.com/questions/404414/print-true-color-24-bit-test-pattern).

3. If you are running vim in tmux, you need to override default true colors of
tmux, as tmux cannot display true colors properly:
[#1246 How to use true colors in vim under tmux?](https://github.com/tmux/tmux/issues/1246)

------------------------------------------------------------------------------

The configuration options don't work.~

You should place them before `colorscheme pastel-sonokai` .

------------------------------------------------------------------------------

A lot of errors are detected if I install with pack feature.~

You'll need to add `packadd! pastel-sonokai` before applying this color scheme.
Check [sainnhe/gruvbox-material#60](https://github.com/sainnhe/gruvbox-material/issues/60)

------------------------------------------------------------------------------

How to enable cursive italic keywords?~

1. Install a font that supports cursive italics, for example https://aka.sainnhe.dev/fonts

2. Enable italic keywords in this color scheme: `let g:pastel-sonokai_enable_italic = 1`

3. (Optional) Disable italic comment: `let g:pastel-sonokai_disable_italic_comment = 1`

------------------------------------------------------------------------------

The comment color looks weird.~

Some terminal emulators don't support italics, which may cause the comment
color looks weird. See https://github.com/sainnhe/gruvbox-material/issues/5#issuecomment-729586348

A temporary solution is to disable italic comments via
|g:pastel-sonokai_disable_italic_comment|.

If you are using tmux, you may also need to override default true colors of
tmux: https://github.com/tmux/tmux/issues/1246

------------------------------------------------------------------------------

How to use custom colors?~
>
    function! s:pastel-sonokai_custom() abort
      " Link a highlight group to a predefined highlight group.
      " See `colors/pastel-sonokai.vim` for all predefined highlight groups.
      highlight! link groupA groupB
      highlight! link groupC groupD

      " Initialize the color palette.
      " The first parameter is a valid value for `g:pastel-sonokai_style`,
      " and the second parameter is a valid value for `g:pastel-sonokai_colors_override`.
      let l:palette = pastel-sonokai#get_palette('atlantis', {})
      " Define a highlight group.
      " The first parameter is the name of a highlight group,
      " the second parameter is the foreground color,
      " the third parameter is the background color,
      " the fourth parameter is for UI highlighting which is optional,
      " and the last parameter is for `guisp` which is also optional.
      " See `autoload/pastel-sonokai.vim` for the format of `l:palette`.
      call pastel-sonokai#highlight('groupE', l:palette.red, l:palette.none, 'undercurl', l:palette.red)
    endfunction

    augroup pastel-sonokaiCustom
      autocmd!
      autocmd ColorScheme pastel-sonokai call s:pastel-sonokai_custom()
    augroup END

    colorscheme pastel-sonokai
<
Or in Neovim (Lua configuration):
>
    vim.api.nvim_create_autocmd('ColorScheme', {
      group = vim.api.nvim_create_augroup('custom_highlights_pastel-sonokai', {}),
      pattern = 'pastel-sonokai',
      callback = function()
        local config = vim.fn['pastel-sonokai#get_configuration']()
        local palette = vim.fn['pastel-sonokai#get_palette'](config.style, config.colors_override)
        local set_hl = vim.fn['pastel-sonokai#highlight']

        set_hl('Search', palette.none, palette.diff_green)
        set_hl('IncSearch', palette.none, palette.diff_red)
      end
    })
<
Note: Make sure to define the `augroup` before calling `colorscheme`.

------------------------------------------------------------------------------

What's your status line configuration?~

See this post: https://aka.sainnhe.dev/statusline

------------------------------------------------------------------------------

What's the font used here?~

See this post: https://aka.sainnhe.dev/fonts

==============================================================================
vim:tw=78:nosta:noet:ts=8:sts=0:ft=help:et:sw=4:fen:fdm=marker:fmr={{{,}}}:
